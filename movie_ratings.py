# -*- coding: utf-8 -*-
"""Movie_Ratings.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1yMfh75GfQG9prr565b-fkb19EQYoiQ70
"""

import pandas as pd
import numpy as np
import matplotlib as plt
import ast
from ast import literal_eval

def rcl() :

    # read the csv files
    credits_df = pd.read_csv("data/credits.csv")
    ratings_df = pd.read_csv("data/ratings.csv")
    ratings_small_df = pd.read_csv("data/ratings_small.csv")
    links_df = pd.read_csv("data/links.csv")
    links_small_df = pd.read_csv("data/links_small.csv")

    # Combine the two ratings data sets
    ratings_df = ratings_df.append(ratings_small_df, ignore_index=True)

    # Making sure none of the movies was removed
    print("number of unique movies before groupby: ", ratings_df.movieId.unique().size)

    # Calculate the average rating for each movie, drop userId and timestamp
    ratings_df = ratings_df.drop(columns = ['userId', 'timestamp'])
    ratings_df = ratings_df.groupby('movieId', as_index=False).mean()

    print("number of unique movies after groupby: ", ratings_df.movieId.unique().size)

    ratings_df.sort_values('movieId')

    # Set the max characters to display for each column. Put (-1) to disable max width to view the full value.
    # pd.set_option('display.max_colwidth', 70)

    # Changing the column names of credits_df for merging
    credits_df.columns = ['cast', 'crew', 'movieId']

    credits_df.sort_values('movieId')

    # Merge rating_df wiht credits_df
    ratings_credits = pd.merge(ratings_df, credits_df, on = "movieId")

    links_df = links_df.append(links_small_df, ignore_index=True)

    # Merge ratings_df and credits_df with links_df
    rcl_df = pd.merge(ratings_credits, links_df, on = 'movieId')

    rcl_df = rcl_df.drop_duplicates()

    rcl_df = rcl_df.reset_index(drop = True)

    # Get all of the empty casts
    empty = []
    for i in range(len(rcl_df.index)):
      if (len(ast.literal_eval(rcl_df.cast[i]))== 0):
          empty.append(i)
      else:
        continue

    # Remove the data with empty cast
    rcl_df = rcl_df.drop(empty)

    rcl_df = rcl_df.reset_index(drop = True)

    return rcl_df
