# -*- coding: utf-8 -*-
"""Movie_Ratings.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1yMfh75GfQG9prr565b-fkb19EQYoiQ70
"""

import pandas as pd
import numpy as np
import matplotlib as plt

imUsingColab = False
shouldDownload = True # Set this to False after the first run to avoid redownloading the dataset
if shouldDownload:
  if imUsingColab:
    # Generate the .env file within the colab environment programatically
    file = open('.env','w')
    file.write('KAGGLE_USERNAME=') # Populate this with your KAGGLE_USERNAME DO NOT COMMIT!!
    file.write('\nKAGGLE_KEY=') # Populate this with your KAGGLE api Key DO NOT COMMIT!!
    file.close()
    # Fetch the downloadData dependency
    import urllib.request
    urllib.request.urlretrieve ("https://raw.githubusercontent.com/lihaojin/Movie_Data_Analysis/master/downloadData.py", "downloadData.py")

  import downloadData
  downloadData.download(imUsingColab)

def ratings_credits_links():
    # read the csv files
    credits_df = pd.read_csv("data/credits.csv")
    ratings_df = pd.read_csv("data/ratings.csv")
    ratings_small_df = pd.read_csv("data/ratings_small.csv")
    links_df = pd.read_csv("data/links.csv")
    links_small_df = pd.read_csv("data/links_small.csv")
    # keywords_df = pd.read_csv("data/keywords.csv")

    # Combine the two ratings data sets
    ratings_df = ratings_df.append(ratings_small_df, ignore_index=True)

    # Making sure none of the movies was removed
    print("number of unique moveies before groupby: ", ratings_df.movieId.unique().size)

    # Calculate the average rating for each movie, drop userId and timestamp
    ratings_df = ratings_df.drop(columns = ['userId', 'timestamp'])
    ratings_df = ratings_df.groupby('movieId', as_index=False).mean()

    print("number of unique moveies after groupby: ", ratings_df.movieId.unique().size)

    ratings_df.sort_values('movieId').head(10)

    # Set the max characters to display for each column. Put (-1) to disable max width to view the full value.
    # pd.set_option('display.max_colwidth', 70)

    # Changing the column names of credits_df for merging
    credits_df.columns = ['cast', 'crew', 'movieId']
    credits_df.sort_values('movieId').head(10)
    ratings_credits = pd.merge(ratings_df, credits_df, on = "movieId")
    ratings_credits.head(10)

    # Combine the two links datasets
    links_df = links_df.append(links_small_df, ignore_index=True)

    # Merge links with ratings and credits
    ratings_credits_link = pd.merge(ratings_credits, links_df, on = 'movieId')

    ratings_credits_link.drop_duplicates()
    return ratings_credits_link;
